#include <string>
#include <iostream>

/**
 * 1332. Remove Palindromic Subsequences
 * You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.
 *
 * Return the minimum number of steps to make the given string empty.
 *
 * A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.
 *
 * A string is called palindrome if is one that reads the same backward as well as forward.
 */

class Solution {
public:
	static int removePalindromeSub(const std::string& s) {
		auto r = s;
		std::reverse(r.begin(), r.end());
		return 1 + (!(s == r) && std::count_if(s.begin(), s.end(), [&](char c) { return c == (s[0] ^ 3); }) ? 1 : 0);
	}
};

int main() {
	std::cout << Solution::removePalindromeSub("abaaba");
	return 0;
}
